// 通过递归遍历一个文件夹所包含的所有的内容（最终目录）
public class bianliFile {
    public static void main(String[] args) {
        File f1=new File("D:\\Class");
        allFilePath(f1);

    }
    public static void allFilePath(File f1) {
        File[] file=f1.listFiles();
        if (file!=null) {
            for(File f:file) {
                if (f.isDirectory()==true) {
                    allFilePath(f);
                } else {
                    System.out.println(f.getName());
                }
            }
        }

    }
}

//字节流读取数据
    public static void main(String[] args) throws IOException {
        FileInputStream fis=new FileInputStream(".\\foo.txt");
        byte[] by=new byte[1024];
        int len;
        while((len=fis.read(by))!=-1) {
            System.out.println(len); //显示的是字节的个数，换行算一个字节
            System.out.println(new String(by,0,len));
        }
        fis.close();
    }
    
public static void main(String[] args) throws IOException {
        long time1=System.currentTimeMillis();
        // 字节缓冲流写入文件
        FileOutputStream fos=new FileOutputStream(".\\f.txt");
        // 使用缓冲输出流包装基本输出流提高写入速度
        BufferedOutputStream bos=new BufferedOutputStream(fos);
        bos.write("hello".getBytes(StandardCharsets.UTF_8));
        bos.close();
        // 字节缓冲流读取文件
        FileInputStream fis =new FileInputStream(".\\f.txt");
        // 包装
        BufferedInputStream bis=new BufferedInputStream(fis);
        int len;
        byte[] by=new byte[1024];  //缓冲数组
        while ((len=bis.read(by))!=-1) {
            System.out.println(new String(by,0,len));
        }
        long time2=System.currentTimeMillis();
        System.out.println("共耗时"+(time2-time1));
    }
